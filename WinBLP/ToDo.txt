*	Finish adding Bat Reference File Editor
*	Add [MERGE] section heading in the middle of the header file
so that each line is inserted after the file names - one line per file.
Allows the user to generate a log file, then edit the header file to add
a brief description of the start location for each .wav file based on the GPS
co-ordinates.  The merge notes then get added into the final log file whenever
the program is run.  Possibly subsequently allow a <tag> section at the start of the
line to explicitly specify the file that the one-line descriptor applies to.


----------------------------------------
2 Dec 2015
DONE On-Screen summaries now correct, but summaries to the log file are doubled for
   some species, e.g. Sopranos and Daubenton's while being correct for others. DONE
DONE Refactor to use common routines with the on-screen calculation of passes. DONE

5-Dec 2015
Fails to add device, microphone or operator data to session
DONE Many but not all bats identified as 'No Bats' DONE

Derive textual log file from database stored data, rather than while adding data to the database

DONE Bat summaries should exclude the numbers for 'No bats'

DONE Bat summaries should identify and mark as unknown, segments with no bat tag in the comment

---------------------------
DONE While loops in ShowDialog fail because you cannot re-open a window that has been closed

RecordingSession Add button does not work

Recording Session Edit button does not update the detail display ?? or the database

Recording Edit button does not populate the editing form

Cancelling the recording edit causes an exception when the window tries to re-open

Recording Edit form Cancel button does not work

DONE RecordingForm needs a DateTime? to TimeSpan two-way converter

DONE Throws an uncaught/caught null reference exception during start-up - not fatal

DONE OperatorList and EquipmentList do not exist

DONE EditBatForm does not save changes

Double clicking a bat in the ListByBats page should switch to BatReference page
and select the clicked bat

----------------------------------------------------------------------------------
Feb2016 Testing
RecordingSessionForm - 
	DONE Date should default to .Today
	DONE StartTime and EndTime defaults
	INHERENT Can't append text to ComboBox editable contents (can but use -> to get to end of line and deselect contents)
	OK Add, Edit, Delete session work OK

	RecordingForm OK
		Add OK
			LabelledSegmentForm - Operates OK but does not save
			Recording Saved but display not updated
		EDIT
			DONE shows blank form, not prefilled with recording
		DEL
			DONE does not delete recording
			Add/Del Segments doesn't work when empty

DONE When Import new session, ListBySession display soes not update - ?Add a REFRESH button
On import - if GPX file present can use co-ordinates to fill in the session GPS location fields

DONE When you select a Recording Datasection the selection is always for the second
recording and the RecordingItemsList view moves to the top of the list instead of
the selected item - so that it is impossible to perform double-clicks on the GPS
co-ordinates for any but the first two recordings.


DONE After creating a new database imported data shows all segments as 'Unknown' instead
of picking up the correct Tags.

NEW FEATURES
Add Map button to Recording Form DONE

DONE Add Picture Table to database with link table to bats BinaryData(.jpg)<-BatPicture->Bat
DONE Add Sonagram table to database with link table to segment BinaryData(.jpg)<-SegmentData->LabelledSegment
DONE Add Snippet table to database with link table to segment () BinaryData(.wav)<-SegmentData->LabelledSegment
	(snippets look like segments but do not add to passes)
	(actually a single blob table which can contain images or
	.wav sound snippets and has a field to identify the appropriate
	file extension to define the type.  Link tablse to Bats or segments)
TODO Add GUI interface and handling for images, sonagrams and .wav snippets.

Add call table with link tables to bats and to labelled segments
		Call<-BatCall->Bat
		Call<-SegmentCall->LabelledSegment
		Call<-CallPicture->BinaryData(.jpg)
TODO Add GUI and handling for call parameter details
TODO Add input processing to recognise a string of the form:-
		{start,end,peak,durn,interval} in the comment
		where four commas are required and each parameter
		is inn the form
		##0.0+/-##0.0 or simply ##0.0.  the first three inkHz the
		other two in ms.
		(added in ProcessLabelledSegment by a call to DBAccess.InsertParamsFromComment())


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
searching for a match in a pair of lists (e.g. bat.CommonNames, existingBat.CommonNames):-

var namesToDelete = existingBat.BatCommonNames.Where(
                p => bat.BatCommonNames.Any(p2 => p2.BatCommonName1 == p.BatCommonName1));

var commonList = list1.Where(list1Element => list2.Any(list2Element => list2Element.item==list1Element.item));

----------------------------------------------------------------------------------
refreshing a list view or similar when the contents have changed

ICollectionView view = CollectionViewSource.GetDefaultView(FolderListView.ItemsSource);
           if(view!=null) view.Refresh();



====================================================================================
For all Many-to-Many link tables:-
Implementation

Using the LINQ to SQL designer, we will create the LINQ to SQL entities that correspond to the tables. Once the DBML is created, we need to make an update. We need to add the DeleteOnNull attribute for each association in the UserRole entity. Since the designer doesn't support managing this attribute, we will have to manually update the DBML to make this change. To update the DBML directly, right-click on the DBML file, select Open with and select the XML Editor. Once you are in the DBML file, find the UserRole entity. We need to add the DeleteOnNull attribute for each association and set it to true.

Hide   Copy Code
<Table Name="dbo.UserRole" Member="UserRoles">
  <Type Name="UserRole">
    <Column Name="UserId" Type="System.Int32" 
       DbType="Int NOT NULL" IsPrimaryKey="true" CanBeNull="false" />
    <Column Name="RoleId" Type="System.Int32" 
       DbType="Int NOT NULL" IsPrimaryKey="true" CanBeNull="false" />
    <Association Name="Role_UserRole" Member="Role" 
       ThisKey="RoleId" OtherKey="Id" Type="Role" 
       IsForeignKey="true" DeleteOnNull="true" />
    <Association Name="User_UserRole" Member="User" 
       ThisKey="UserId" OtherKey="Id" Type="User" 
       IsForeignKey="true" DeleteOnNull="true" />
  </Type>

Setting DeleteOnNull to true makes it possible to delete the object when the association is set to null. After updating and saving the DBML file, right-click the DBML file in Solution Explorer and select Run Custom Tool. This will recreate the UserRole entity with the updates.



??????????????????????????????????????????????????????????????????????????????????????
BingMaps Basic Key:-

AhhVL9x6bq6w0NbyqlwjmXDh3Qd64GbWowQQlFzrqx0ChD1MvaLkMTDQxuh2bhzh






